import rtquery
import time

addresses = [
	("::1", 2020),
	]

"""
	("192.168.143.210", 2020),
	("192.168.143.211", 2020),
	("192.168.143.212", 2020),
	("192.168.143.213", 2020),
	("192.168.143.216", 2020),
	("192.168.143.217", 2020),
	("192.168.143.218", 2020),
	("192.168.143.219", 2020),
	("192.168.143.220", 2020),
	("192.168.143.221", 2020),
	("192.168.143.223", 2020),
	("192.168.143.224", 2020),
]
"""

s = time.time()
x = 0
for i in range(0, 100000):
	res = rtquery.query(addresses, open("cube").read(), "SELECT COUNT(content)")[0]
	d = res - x
	x = res
	print(i * 30, (d / 30) / 1024 / 1024)
	s += 30
	time.sleep(s - time.time())

""" time s / mln rows 
1 node
0 0.0
30 0.5448777516682942
60 0.5845851262410482
90 0.5825568517049153
120 0.5751978556315104
150 0.5691000302632649
180 0.5582825660705566
210 0.5558642387390137

2 nodes
60 1.1834078788757325
90 1.1678321838378907
120 1.1557662963867188
150 1.143531894683838
180 1.1285794576009114
210 1.113913599650065

4 nodes
0 0.0
30 2.310231908162435
60 2.361601797739665
90 2.335988426208496
120 2.3174475987752277
150 2.286113675435384
180 2.2582382202148437
210 2.230856196085612

8 nodes, 2 gen threads
0 0.0
30 2.5363988876342773
60 2.6120431900024412
90 2.5943997701009116
120 2.5830362319946287
150 2.4490139643351236
180 2.449690024058024
210 2.457283051808675
240 2.484872817993164
270 2.4727421442667645
300 2.424401601155599
330 2.4263258298238117
360 2.368441931406657
390 2.340657138824463

8 nodes, 4 gen threads
0 0.0
30 3.871472930908203
60 3.929837767283122
90 4.356386470794678
120 4.70998280843099
150 4.660901165008545
180 4.585490322113037
210 4.53386074701945

12 nodes, 4+2 gen threads
0 0.0
30 5.765012105305989
60 7.229895146687825
90 7.1388827959696455
120 7.04170773824056
150 6.962240854899089
180 6.891810162862142
210 6.787965202331543
"""


"""
Packet size:

10B
0 0.0
30 0.5030387242635092
60 0.5901634216308593
90 0.5822712262471517
120 0.5757569948832194
150 0.5672668139139811
180 0.5614421844482422
210 0.5558513005574545

20B
0 0.0
30 0.3043664932250977
60 0.3394177436828613
90 0.3370055198669434
120 0.33469680150349934
150 0.3325049082438151
180 0.32873690923055016
210 0.3275049845377604
240 0.3155790646870931
270 0.3222585042317708
300 0.3215387026468913
330 0.3190224329630534
360 0.316597048441569
390 0.3153000195821126

40B
0 0.0
30 0.1631299336751302
60 0.18342148462931315
90 0.18044163386027018
120 0.18156019846598306
150 0.18031511306762696
180 0.18057775497436523
210 0.17866141001383465
240 0.17815879185994465
270 0.17860310872395832
300 0.17612250645955405
330 0.17446568806966145
360 0.17564595540364583
390 0.17498445510864258
420 0.17414458592732748
450 0.17322699228922525
480 0.17338596979777018
510 0.17033147811889648
540 0.17115507125854493
570 0.16973800659179689
600 0.17013037999471028
630 0.1632952054341634
660 0.1684055010477702
690 0.16773109436035155
720 0.16644379297892253

50B
0 0.0
30 0.12087732950846354
60 0.1429135322570801
90 0.14252974192301432
120 0.14192469914754233
150 0.14194011688232422
180 0.14154364267985026
210 0.14045947392781574
240 0.14002447128295897
270 0.13902012507120767
300 0.13771476745605468
330 0.13642975489298503
(...)

80B
0 0.0
30 0.08278582890828451
60 0.095172119140625
90 0.09478947321573893
120 0.09423173268636068
150 0.0930288314819336
180 0.09294452667236328
210 0.0927401860555013
240 0.09252939224243165
270 0.09216302235921224
300 0.09188582102457682
(...)
"""
